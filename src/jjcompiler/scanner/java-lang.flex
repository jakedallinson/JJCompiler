/**
 * CMinusScannerB generated by JFLex
 */

package jjcompiler.scanner;
import java.io.*;

%%

%class CMinusScannerB
%type Token
%function scanToken
%implements Scanner

%{
private Token nextToken;
public CMinusScannerB(BufferedReader file) throws IOException {
    zzReader = file;
    nextToken = scanToken();
}
public Token getNextToken() throws IOException {
    Token returnToken = nextToken;
    if (nextToken.getType() != Token.TokenType.ENDFILE)
        nextToken = scanToken();
    return returnToken;
}
public Token viewNextToken() {
    return nextToken;
}
%}

/* DECLARATIONS */

digit 		= [0-9]
letter 		= [a-zA-Z]
number 		= {digit}
identifier	= {letter}({letter})*
whitespace  = [\n\r|\n|\r|\t|\ \t]
comment     = "/*"[^*]~"*/"

%%

/* DEFINITIONS */

{comment}       { /* ignore */ }

"else" 		    {return new Token(Token.TokenType.ELSE, yytext());}
"if" 		    {return new Token(Token.TokenType.IF, yytext());}
"int" 		    {return new Token(Token.TokenType.INT, yytext());}
"return" 	    {return new Token(Token.TokenType.RETURN, yytext());}
"void" 		    {return new Token(Token.TokenType.VOID, yytext());}
"while" 		{return new Token(Token.TokenType.WHILE, yytext());}

"+" 		    {return new Token(Token.TokenType.PLUS, yytext());}
"-" 	    	{return new Token(Token.TokenType.MINUS, yytext());}
"*" 	    	{return new Token(Token.TokenType.TIMES, yytext());}
"/" 	    	{return new Token(Token.TokenType.DIVIDE, yytext());}
"<" 	    	{return new Token(Token.TokenType.LT, yytext());}
"<=" 	    	{return new Token(Token.TokenType.LTEQ, yytext());}
">" 	    	{return new Token(Token.TokenType.GT, yytext());}
">=" 	    	{return new Token(Token.TokenType.GTEQ, yytext());}
"==" 	    	{return new Token(Token.TokenType.EQ, yytext());}
"!=" 	    	{return new Token(Token.TokenType.NOTEQ, yytext());}
"=" 	    	{return new Token(Token.TokenType.ASSIGN, yytext());}
";" 	    	{return new Token(Token.TokenType.SEMI, yytext());}
"," 	    	{return new Token(Token.TokenType.COMMA, yytext());}
"(" 	    	{return new Token(Token.TokenType.LPAREN, yytext());}
")" 	    	{return new Token(Token.TokenType.RPAREN, yytext());}
"[" 	    	{return new Token(Token.TokenType.LBRACKET, yytext());}
"]" 	    	{return new Token(Token.TokenType.RBRACKET, yytext());}
"{" 	    	{return new Token(Token.TokenType.LCURLY, yytext());}
"}" 		    {return new Token(Token.TokenType.RCURLY, yytext());}
<<EOF>> 	    {return new Token(Token.TokenType.ENDFILE);}

{whitespace}+   { /* ignore */ }
{identifier}    {return new Token(Token.TokenType.ID, yytext());}
{number}+		{return new Token(Token.TokenType.NUM, yytext());}

/* error cases */
{identifier}{digit}+	{return new Token(Token.TokenType.ERROR, yytext());}
{number}+{letter}+  	{return new Token(Token.TokenType.ERROR, yytext());}
.                       {return new Token(Token.TokenType.ERROR, yytext());}
