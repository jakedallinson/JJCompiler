/**
 * CMinusScannerB generated by JFLex
 */

package jjcompiler.scanner;
import java.io.*;

%%

%class CMinusScannerB
%type Token
%function scanToken

%{
public static void main(String[] args) {
    String testCase = "ex2";
    try {
        BufferedReader br = new BufferedReader(new FileReader("resources/" + testCase + ".cm"));
        PrintWriter pw = new PrintWriter(new FileWriter(new File("resources", testCase + "OUT.txt")));
        CMinusScannerB scanner = new CMinusScannerB(br);

        Token nextToken = new Token();
        while (nextToken.getType() != Token.TokenType.ENDFILE) {
            // print the token
            nextToken = scanner.scanToken();
            System.out.println(nextToken.printToken());
        }

        pw.close();
    } catch (IOException e) {
        System.out.println("Error reading file.");
    }
}
%}

/* DECLARATIONS */

digit 		= [0-9]
letter 		= [a-zA-Z]
number 		= {digit}*
identifier	= {letter}*
comment     = "/*"[^*]~"*/"

%%

/* DEFINITIONS */

{comment}       {return new Token(Token.TokenType.ERROR);}

"else" 		    {return new Token(Token.TokenType.ELSE);}
"if" 		    {return new Token(Token.TokenType.IF);}
"int" 		    {return new Token(Token.TokenType.INT);}
"return" 	    {return new Token(Token.TokenType.RETURN);}
"void" 		    {return new Token(Token.TokenType.VOID);}
"while" 		{return new Token(Token.TokenType.WHILE);}

"+" 		    {return new Token(Token.TokenType.PLUS);}
"-" 	    	{return new Token(Token.TokenType.MINUS);}
"*" 	    	{return new Token(Token.TokenType.TIMES);}
"/" 	    	{return new Token(Token.TokenType.DIVIDE);}
"<" 	    	{return new Token(Token.TokenType.LT);}
"<=" 	    	{return new Token(Token.TokenType.LTEQ);}
">" 	    	{return new Token(Token.TokenType.GT);}
">=" 	    	{return new Token(Token.TokenType.GTEQ);}
"==" 	    	{return new Token(Token.TokenType.EQ);}
"!=" 	    	{return new Token(Token.TokenType.NOTEQ);}
"=" 	    	{return new Token(Token.TokenType.ASSIGN);}
";" 	    	{return new Token(Token.TokenType.SEMI);}
"," 	    	{return new Token(Token.TokenType.COMMA);}
"(" 	    	{return new Token(Token.TokenType.LPAREN);}
")" 	    	{return new Token(Token.TokenType.RPAREN);}
"[" 	    	{return new Token(Token.TokenType.LBRACKET);}
"]" 	    	{return new Token(Token.TokenType.RBRACKET);}
"{" 	    	{return new Token(Token.TokenType.LCURLY);}
"}" 		    {return new Token(Token.TokenType.RCURLY);}
"<<EOF>>"	    {return new Token(Token.TokenType.ENDFILE);}

{identifier}    {return new Token(Token.TokenType.ID);}
{number}		{return new Token(Token.TokenType.NUM);}
